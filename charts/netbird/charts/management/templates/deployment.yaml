{{- if .Values.enabled }}
# Management Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "management.fullname" . }}
  labels:
    {{- include "management.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      {{- include "management.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "management.selectorLabels" . | nindent 8 }}
    spec:
      initContainers:
        - name: wait-for-db
          image: "busybox:1.34"
          command: ['sh', '-c', '{{ if $.Values.global.postgresql.external.enabled }}until nc -z {{ $.Values.global.postgresql.external.host }} {{ $.Values.global.postgresql.external.port }}; do echo waiting for postgresql; sleep 2; done;{{ else }}until nc -z {{ $.Release.Name }}-postgresql-rw 5432; do echo waiting for postgresql; sleep 2; done;{{ end }}']
      containers:
        - name: management
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: TZ
              value: {{ $.Values.global.timezone | quote }}
          envFrom:
            # Non-sensitive configuration from ConfigMap
            - configMapRef:
                name: {{ include "management.fullname" . }}-config
            # Sensitive configuration from Secret
            - secretRef:
                name: {{ include "management.fullname" . }}-secrets
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
            - name: grpc
              containerPort: 33073
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
          readinessProbe:
            httpGet:
              path: /metrics
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 2
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          volumeMounts:
            - name: management-config
              mountPath: /etc/netbird/management.json
              subPath: management.json
            - name: management-var
              mountPath: /var/lib/netbird
      volumes:
        - name: management-config
          configMap:
            name: {{ include "management.fullname" . }}-config
        - name: management-var
          {{- if .Values.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "management.fullname" . }}-var
          {{- else }}
          emptyDir: {}
          {{- end }}
{{- end }}